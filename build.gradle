description "Collokia's Vertx-SQS Integration"

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

buildscript {
    repositories {
        jcenter()
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
        mavenCentral()
        /*
        maven {
            url 'http://dl.bintray.com/kotlin/kotlin-eap'
        }
        */
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: "maven"

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException('''A Haiku:
                                      |  This needs Java 8,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven {
        url = 'http://oss.sonatype.org/content/repositories/snapshots/'
    }
    /*
    maven {
        url 'http://dl.bintray.com/kotlin/kotlin-eap'
    }
    maven {
        url 'http://dl.bintray.com/jaysonminard/kohesive'
    }
    maven {
        url 'http://dl.bintray.com/mplatvoet/komponents'
    }
    */
}

configurations {
    annotationProcessor
}

ext {
    generatedSrcDir = "$projectDir/src/generated"
}

sourceSets {
    main {
        groovy {
            srcDir "$generatedSrcDir/groovy"
        }
        resources {
            srcDir "$generatedSrcDir/resources"
        }
    }
}

dependencies {
    compile "io.vertx:vertx-core:$version_vertx"
    compile "io.vertx:vertx-unit:$version_vertx"
    compile "io.vertx:vertx-codegen:$version_vertx"
    compile "io.vertx:vertx-lang-groovy:$version_vertx"
    compile "io.vertx:vertx-lang-js:$version_vertx"
    compile "io.vertx:vertx-service-factory:$version_vertx"
    compile "io.vertx:vertx-service-proxy:$version_vertx"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    compile "com.amazonaws:aws-java-sdk-sqs:$version_sqs"

    compile "nl.komponents.kovenant:kovenant:$version_kovenant"

    annotationProcessor "io.vertx:vertx-codegen:$version_vertx"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "org.elasticmq:elasticmq-core_2.11:$version_elasticmq"
    testCompile "org.elasticmq:elasticmq-rest-sqs_2.11:$version_elasticmq"
    testCompile "junit:junit:$version_junit"
}

task cleanGenerated(type: Delete) {
    delete generatedSrcDir
}

compileJava {
    dependsOn cleanGenerated
    doFirst {
        mkdir generatedSrcDir
    }
    options.compilerArgs += [
            "-AoutputDirectory=$generatedSrcDir",
            "-processor", "io.vertx.codegen.CodeGenProcessor"
    ]
    classpath += configurations.annotationProcessor
}